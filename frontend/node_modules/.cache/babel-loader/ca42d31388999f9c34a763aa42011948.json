{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\nimport axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api/users\"\n});\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await api.post(\"/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await api.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","axios","api","create","baseURL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name"],"sources":["C:/Projects/Travasy/proshop/frontend/src/actions/userActions.js"],"sourcesContent":["import {\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_REGISTER_FAIL\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n\tbaseURL: \"http://localhost:5000/api/users\"\r\n});\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await api.post(\r\n\t\t\t\"/login\",\r\n\t\t\t{ email, password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem(\"userInfo\");\r\n\tdispatch({ type: USER_LOGOUT });\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_REQUEST,\r\n\t\t})\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tconst { data } = await api.post(\r\n\t\t\t'/api/users',\r\n\t\t\t{ name, email, password },\r\n\t\t\tconfig\r\n\t\t)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t})\r\n\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t})\r\n\t}\r\n}"],"mappings":"AAAA,SACCA,kBADD,EAECC,kBAFD,EAGCC,eAHD,EAICC,WAJD,EAKCC,qBALD,EAMCC,qBAND,EAOCC,kBAPD,QAQO,4BARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EACxBC,OAAO,EAAE;AADe,CAAb,CAAZ;AAIA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC7D,IAAI;IACHA,QAAQ,CAAC;MACRC,IAAI,EAAEf;IADE,CAAD,CAAR;IAIA,MAAMgB,MAAM,GAAG;MACdC,OAAO,EAAE;QACR,gBAAgB;MADR;IADK,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMV,GAAG,CAACW,IAAJ,CACtB,QADsB,EAEtB;MAAEP,KAAF;MAASC;IAAT,CAFsB,EAGtBG,MAHsB,CAAvB;IAMAF,QAAQ,CAAC;MACRC,IAAI,EAAEd,kBADE;MAERmB,OAAO,EAAEF;IAFD,CAAD,CAAR;IAKAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EACA,CAvBD,CAuBE,OAAOO,KAAP,EAAc;IACfX,QAAQ,CAAC;MACRC,IAAI,EAAEb,eADE;MAERkB,OAAO,EACNK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADvB,GAEGF,KAAK,CAACE;IALF,CAAD,CAAR;EAOA;AACD,CAjCM;AAmCP,OAAO,MAAMC,MAAM,GAAG,MAAOd,QAAD,IAAc;EACzCO,YAAY,CAACQ,UAAb,CAAwB,UAAxB;EACAf,QAAQ,CAAC;IAAEC,IAAI,EAAEZ;EAAR,CAAD,CAAR;AACA,CAHM;AAKP,OAAO,MAAM2B,QAAQ,GAAG,CAACC,IAAD,EAAOnB,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;EACtE,IAAI;IACHA,QAAQ,CAAC;MACRC,IAAI,EAAEX;IADE,CAAD,CAAR;IAIA,MAAMY,MAAM,GAAG;MACdC,OAAO,EAAE;QACR,gBAAgB;MADR;IADK,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMV,GAAG,CAACW,IAAJ,CACtB,YADsB,EAEtB;MAAEY,IAAF;MAAQnB,KAAR;MAAeC;IAAf,CAFsB,EAGtBG,MAHsB,CAAvB;IAMAF,QAAQ,CAAC;MACRC,IAAI,EAAEV,qBADE;MAERe,OAAO,EAAEF;IAFD,CAAD,CAAR;IAKAJ,QAAQ,CAAC;MACRC,IAAI,EAAEd,kBADE;MAERmB,OAAO,EAAEF;IAFD,CAAD,CAAR;IAKAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EACA,CA5BD,CA4BE,OAAOO,KAAP,EAAc;IACfX,QAAQ,CAAC;MACRC,IAAI,EAAET,kBADE;MAERc,OAAO,EACNK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACGF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADvB,GAEGF,KAAK,CAACE;IALF,CAAD,CAAR;EAOA;AACD,CAtCM"},"metadata":{},"sourceType":"module"}